#cloud-config

write_files:
- path: /etc/flannel/options.env
  content: |
    FLANNELD_IFACE=$private_ipv4
    FLANNELD_ETCD_ENDPOINTS=http://127.0.0.1:2379
- path: /etc/kubernetes/manifests/kube-proxy.yaml
  content: |
    apiVersion: v1
    kind: Pod
    metadata:
      name: kube-proxy
      namespace: kube-system
    spec:
      hostNetwork: true
      containers:
      - name: kube-proxy
        image: quay.io/coreos/hyperkube:v${K8S_VERSION}_coreos.0
        command:
        - /hyperkube
        - proxy
        - --master=${MASTER_API_SERVER}
        - --kubeconfig=/etc/kubernetes/worker-kubeconfig.yaml
        - --proxy-mode=iptables
        securityContext:
          privileged: true
        volumeMounts:
          - mountPath: /etc/kubernetes/worker-kubeconfig.yaml
            name: "kubeconfig"
            readOnly: true
      volumes:
        - name: "kubeconfig"
          hostPath:
            path: "/etc/kubernetes/worker-kubeconfig.yaml"
- path: /etc/kubernetes/worker-kubeconfig.yaml
  content: |
    apiVersion: v1
    kind: Config
    clusters:
    - name: local
    users:
    - name: kubelet
    contexts:
    - context:
        cluster: local
        user: kubelet
      name: kubelet-context
    current-context: kubelet-context

coreos:
  etcd2:
    listen-client-urls: "http://0.0.0.0:2379"
    initial-cluster: "default=${ETCD_CLUSTER}"
    proxy: on
  update:
    reboot-strategy: "off"
  units:
  - name: etcd2.service
    command: start
  - name: flanneld.service
    drop-ins:
      - name: 40-ExecStartPre-symlink.conf
        content: |
          [Service]
          ExecStartPre=/usr/bin/ln -sf /etc/flannel/options.env /run/flannel/options.env
  - name: docker.service
    drop-ins:
      - name: 40-flannel.conf
        content: |
          [Unit]
          Requires=flanneld.service
          After=flanneld.service
  - name: kubelet.service
    command: start
    enable: true
    content: |
      [Service]
      ExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests

      Environment="RKT_OPTS=--volume=resolv,kind=host,source=/etc/resolv.conf --mount volume=resolv,target=/etc/resolv.conf"
      Environment=KUBELET_VERSION=v${K8S_VERSION}_coreos.0
      ExecStart=/usr/lib/coreos/kubelet-wrapper \
        --api-servers=${MASTER_API_SERVER} \
        --register-node=true \
        --allow-privileged=true \
        --config=/etc/kubernetes/manifests \
        --hostname-override=$private_ipv4 \
        --cluster-dns=${DNS_SERVICE_IP} \
        --cluster-domain=cluster.local \
        --kubeconfig=/etc/kubernetes/worker-kubeconfig.yaml
      Restart=always
      RestartSec=10
      [Install]
      WantedBy=multi-user.target
