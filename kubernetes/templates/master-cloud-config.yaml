#cloud-config

write_files:
- path: /etc/flannel/options.env
  content: |
    FLANNELD_IFACE=$private_ipv4
    FLANNELD_ETCD_ENDPOINTS=http://127.0.0.1:2379
- path: /etc/kubernetes/manifests/kube-apiserver.yaml
  content: |
    apiVersion: v1
    kind: Pod
    metadata:
      name: kube-apiserver
      namespace: kube-system
    spec:
      hostNetwork: true
      containers:
      - name: kube-apiserver
        image: quay.io/coreos/hyperkube:v${K8S_VERSION}_coreos.0
        command:
        - /hyperkube
        - apiserver
        - --insecure-bind-address=0.0.0.0
        - --insecure-port=8080
        - --etcd-servers=http://127.0.0.1:2379
        - --allow-privileged=true
        - --service-cluster-ip-range=${SERVICE_IP_RANGE}
        - --advertise-address=$private_ipv4
        - --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,ResourceQuota
        - --runtime-config=extensions/v1beta1=true,extensions/v1beta1/networkpolicies=true
        - --cloud-provider=aws
        ports:
        - containerPort: 8080
          hostPort: 8080
          name: http
- path: /etc/kubernetes/manifests/kube-proxy.yaml
  content: |
    apiVersion: v1
    kind: Pod
    metadata:
      name: kube-proxy
      namespace: kube-system
    spec:
      hostNetwork: true
      containers:
      - name: kube-proxy
        image: quay.io/coreos/hyperkube:v${K8S_VERSION}_coreos.0
        command:
        - /hyperkube
        - proxy
        - --master=http://127.0.0.1:8080
        - --proxy-mode=iptables
        securityContext:
          privileged: true
- path: /etc/kubernetes/manifests/kube-controller-manager.yaml
  content: |
    apiVersion: v1
    kind: Pod
    metadata:
      name: kube-controller-manager
      namespace: kube-system
    spec:
      hostNetwork: true
      containers:
      - name: kube-controller-manager
        image: quay.io/coreos/hyperkube:v${K8S_VERSION}_coreos.0
        command:
        - /hyperkube
        - controller-manager
        - --master=http://127.0.0.1:8080
        - --leader-elect=true
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 10252
          initialDelaySeconds: 15
          timeoutSeconds: 1
- path: /etc/kubernetes/manifests/kube-scheduler.yaml
  content: |
    apiVersion: v1
    kind: Pod
    metadata:
      name: kube-scheduler
      namespace: kube-system
    spec:
      hostNetwork: true
      containers:
      - name: kube-scheduler
        image: quay.io/coreos/hyperkube:v${K8S_VERSION}_coreos.0
        command:
        - /hyperkube
        - scheduler
        - --master=http://127.0.0.1:8080
        - --leader-elect=true
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 10251
          initialDelaySeconds: 15
          timeoutSeconds: 1

coreos:
  etcd2:
    listen-client-urls: "http://0.0.0.0:2379"
    initial-cluster: "default=${ETCD_CLUSTER}"
    proxy: on
  update:
    reboot-strategy: "off"
  units:
  - name: etcd2.service
    command: start
  - name: flanneld.service
    drop-ins:
      - name: 40-ExecStartPre-symlink.conf
        content: |
          [Service]
          ExecStartPre=/usr/bin/ln -sf /etc/flannel/options.env /run/flannel/options.env
          ExecStartPre=/usr/bin/curl -X PUT -d "value={\"Network\":\"${POD_NETWORK}\",\"Backend\":{\"Type\":\"vxlan\"}}" "http://127.0.0.1:2379/v2/keys/coreos.com/network/config"
  - name: docker.service
    drop-ins:
      - name: 40-flannel.conf
        content: |
          [Unit]
          Requires=flanneld.service
          After=flanneld.service
  - name: kubelet.service
    command: start
    enable: true
    content: |
      [Service]
      ExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests

      Environment="RKT_OPTS=--volume=resolv,kind=host,source=/etc/resolv.conf --mount volume=resolv,target=/etc/resolv.conf"
      Environment=KUBELET_VERSION=v${K8S_VERSION}_coreos.0
      ExecStart=/usr/lib/coreos/kubelet-wrapper \
        --api-servers=http://127.0.0.1:8080 \
        --register-schedulable=false \
        --allow-privileged=true \
        --config=/etc/kubernetes/manifests \
        --hostname-override=$private_ipv4 \
        --cluster-dns=${DNS_SERVICE_IP} \
        --cluster-domain=cluster.local
      Restart=always
      RestartSec=10
      [Install]
      WantedBy=multi-user.target
